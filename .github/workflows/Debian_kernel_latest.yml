#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# Description: Build Kernel using GitHub Actions
# Change from P3TERX
#

name: Riva Kernel Latest

on:
  workflow_dispatch:
  #schedule:
    #- cron: "36 20 * * 1,4"
   # inputs:
    #  ssh:
     #   description: 'SSH connection to Actions'
      #  required: false
       # default: 'false'

env:
  UPLOAD_DIR: true
  UPLOAD_RELEASE: true
  UPLOAD_WETRANSFER: false
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-latest
    container: docker.io/debian:bullseye-backports
    
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sed -i~orig -e 's/# deb-src/deb-src/' /etc/apt/sources.list
        echo "deb-src http://deb.debian.org/debian bullseye main" >> /etc/apt/sources.list
        apt-get -qq update
        apt-get -qq install build-essential bzip2 gawk gettext git patch unzip htop wget curl sudo time -y
        apt-get -qq build-dep linux -y
        apt-get -qq autoremove --purge
        apt-get -qq clean
        cp /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
        mkdir -p /workdir
        sudo mkdir -p /workdir/upload
        sudo chown $USER:$GROUPS /workdir
        sudo chown $USER:$GROUPS /workdir/upload

    - name: Check for updates
      id: check
      run: |
        github_tag=$(curl -s 'https://api.github.com/repos/B4gol/build-action-kernel/releases' | grep 'msm8937_Kernel' | head -n 1 | awk -F '"' '{print $4}' | awk -F '[/]' '{print $8}')
        github_ver=$(curl -s 'https://api.github.com/repos/B4gol/build-action-kernel/releases' | grep ${github_tag}  | grep 'zip' | grep 'headers' | awk -F '"' '{print $4}' | awk -F '[/]' '{print $9}' | awk -F '[-]' '{print $3}' | awk -F '[_]' '{print $1}')
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        echo "github_ver=" $github_ver
        echo "kernel_ver=" $kernel_ver
        if [[ $github_ver == *"$kernel_ver"* ]]; then
            echo "::set-output name=status::fail"
        else
            echo "::set-output name=status::success"
        fi

    - name: Get source code
      id: code
      working-directory: /workdir
      if: steps.check.outputs.status == 'success'
      run: |
        df -hT $PWD
        kernel_file=$(curl -s https://www.kernel.org/ | grep 'alt="Download"' | awk -F '"' '{print $2}')
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        git clone https://github.com/B4gol/Anykernel3 /workdir/upload/AnyKernel
        git clone https://github.com/B4gol/platform-kernelist-xiaomi-rova /workdir/linux-$kernel_ver && cd /workdir/linux-$kernel_ver
        echo "::set-output name=status::success"

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Compile the kernel
      id: compile
      if: steps.code.outputs.status == 'success'
      working-directory: /workdir
      run: |
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        cd linux-$kernel_ver
        wget -O .config https://raw.githubusercontent.com/B4gol/build-action-kernel/msm8937/riva_defconfig
        sed -ri '/CONFIG_SYSTEM_TRUSTED_KEYS/s/=.+/=""/g' .config && scripts/config --disable MODULE_SIG && scripts/config --disable DEBUG_INFO
        echo -e "$(nproc) thread compile"
        sudo time make -j$(nproc) Image.gz-dtb
        cd /workdir && mv *dtb /workdir/upload/AnyKernel
        echo "::set-output name=status::success"
        echo "FILE_DATE=Kernel_msm8937_$kernel_ver_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV   

    - name: Check space usage
      if: (!cancelled()) && steps.compile.outputs.status == 'success'
      run: df -hT

    - name: Upload
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_DIR == 'true'
      with:
        name: ${{ env.FILE_DATE }}
        path: /workdir/upload
        
    - name: Upload to WeTransfer
      id: wetransfer
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/upload 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"     

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        kernel_ver=$(curl -s https://www.kernel.org/ | grep ' <a href="https://cdn.kernel.org/pub/linux/kernel/' | head -n 1 | awk -F '[>]' '{print $2}' | awk -F '[<]' '{print $1}')
        echo "::set-output name=release_tag::Riva_Kernel_${kernel_ver}_latest_bbr_$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"

    - name: Upload kernel to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: /workdir/upload/*
        
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 10 
